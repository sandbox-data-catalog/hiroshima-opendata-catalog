name: Deploy to ECR(production)

on:
  deployment:
  push:
    branches:
      - master

env:
  FIWARE_PROD_ENV: ${{ secrets.FIWARE_PROD_ENV }}
  FIWARE_PROD_TARGET_JSON: ${{ secrets.FIWARE_PROD_TARGET_JSON }}
  FIWARE_PROD_ENTITY_JSON: ${{ secrets.FIWARE_PROD_ENTITY_JSON }}

jobs:
  build-and-push:

    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2
      with:
        path: ckan

    - name: fiware-env
      run: echo ${FIWARE_PROD_ENV} | sed -e "s#\\\\n#\n#g" > ckan/ckanext-hiroshima/ckanext/hiroshima/vue/.env

    - name: fiware-target-json
      run: echo ${FIWARE_PROD_TARGET_JSON} | sed -e "s#\\\\n#\n#g" > ckan/ckanext-hiroshima/ckanext/hiroshima/vue/src/batch/target.json

    - name: fiware-entity-json
      run: echo ${FIWARE_PROD_ENTITY_JSON} | sed -e "s#\\\\n#\n#g" > ckan/ckanext-hiroshima/ckanext/hiroshima/vue/src/batch/entity.json

    - name: build
      run: cd ckan/ckanext-hiroshima/ckanext/hiroshima/vue && npm install && npm run build

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
      run: |
        #IMAGE_TAG=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
        cd ckan && docker build --build-arg CKAN_STORAGE_PATH="/usr/lib/ckan/default/storage" --build-arg USE_CKAN_CONFIG_NAME="production.ini" -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
