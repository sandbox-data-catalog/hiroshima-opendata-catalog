# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3"

volumes:
  ckan_storage:
  pg_data:

services:
  ckan:
    container_name: ckan
    build:
      context: ../../
      dockerfile: Dockerfile
      args:
          - CKAN_SITE_URL=${CKAN_SITE_URL}
          - CKAN_STORAGE_PATH=${CKAN_STORAGE_PATH}
          - USE_CKAN_CONFIG_NAME=${USE_CKAN_CONFIG_NAME}
    links:
      - db
      - solr
      - redis
    ports:
      - "0.0.0.0:80:${CKAN_PORT}"
    environment:
      # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_DATAPUSHER_URL=http://datapusher:8800
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_STORAGE_PATH=${CKAN_STORAGE_PATH}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - CKAN_SMTP_SERVER=${CKAN_SMTP_SERVER}
      - CKAN_SMTP_STARTTLS=${CKAN_SMTP_STARTTLS}
      - CKAN_SMTP_USER=${CKAN_SMTP_USER}
      - CKAN_SMTP_PASSWORD=${CKAN_SMTP_PASSWORD}
      - CKAN_SMTP_MAIL_FROM=${CKAN_SMTP_MAIL_FROM}
      - CKAN_SMTP_REPLY_TO=${CKAN_SMTP_REPLY_TO}
      - CKAN_SMTP_MAIL_CC=${CKAN_SMTP_MAIL_CC}
      - SESSION_SECRET=${SESSION_SECRET}

    volumes:
      - ckan_storage:/var/lib/ckan

  datapusher:
    build: https://${GITHUB_TOKEN}:x-oauth-basic@github.com/ckan-project-team/datapusher.git
    container_name: datapusher
    ports:
      - "8800:8800"
    links:
      - db
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://ckan:${POSTGRES_PASSWORD}@db/datapusher

  db:
    container_name: db
    build:
      context: ../../
      dockerfile: contrib/docker/postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data

  solr:
    container_name: solr
    build:
      context: ../../
      dockerfile: contrib/docker/solr/Dockerfile


  redis:
    container_name: redis
    image: redis:latest
